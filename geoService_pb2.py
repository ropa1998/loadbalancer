# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: geoService.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='geoService.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10geoService.proto\"\x17\n\x07\x43ountry\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1a\n\nSubCountry\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x14\n\x04\x43ity\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x17\n\x02Ip\x12\x11\n\tdirection\x18\x01 \x01(\t\"\x07\n\x05\x45mpty\")\n\x14GetAllCountriesReply\x12\x11\n\tcountries\x18\x01 \x03(\t\",\n\x14GetSubCountriesReply\x12\x14\n\x0csubCountries\x18\x01 \x03(\t\" \n\x0eGetCitiesReply\x12\x0e\n\x06\x63ities\x18\x01 \x03(\t\"t\n\x14GetLocationOfIpReply\x12\x14\n\x07\x63ountry\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x12\n\x05state\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x12\n\x05\x65rror\x18\x03 \x01(\tH\x02\x88\x01\x01\x42\n\n\x08_countryB\x08\n\x06_stateB\x08\n\x06_error2\xcc\x01\n\nGeoService\x12\x30\n\x0fGetAllCountries\x12\x06.Empty\x1a\x15.GetAllCountriesReply\x12\x32\n\x0fGetSubCountries\x12\x08.Country\x1a\x15.GetSubCountriesReply\x12)\n\tGetCities\x12\x0b.SubCountry\x1a\x0f.GetCitiesReply\x12-\n\x0fGetLocationOfIp\x12\x03.Ip\x1a\x15.GetLocationOfIpReplyb\x06proto3'
)




_COUNTRY = _descriptor.Descriptor(
  name='Country',
  full_name='Country',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Country.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=43,
)


_SUBCOUNTRY = _descriptor.Descriptor(
  name='SubCountry',
  full_name='SubCountry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='SubCountry.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=45,
  serialized_end=71,
)


_CITY = _descriptor.Descriptor(
  name='City',
  full_name='City',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='City.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=93,
)


_IP = _descriptor.Descriptor(
  name='Ip',
  full_name='Ip',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='direction', full_name='Ip.direction', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=118,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=127,
)


_GETALLCOUNTRIESREPLY = _descriptor.Descriptor(
  name='GetAllCountriesReply',
  full_name='GetAllCountriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='countries', full_name='GetAllCountriesReply.countries', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=170,
)


_GETSUBCOUNTRIESREPLY = _descriptor.Descriptor(
  name='GetSubCountriesReply',
  full_name='GetSubCountriesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='subCountries', full_name='GetSubCountriesReply.subCountries', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=216,
)


_GETCITIESREPLY = _descriptor.Descriptor(
  name='GetCitiesReply',
  full_name='GetCitiesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='cities', full_name='GetCitiesReply.cities', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=218,
  serialized_end=250,
)


_GETLOCATIONOFIPREPLY = _descriptor.Descriptor(
  name='GetLocationOfIpReply',
  full_name='GetLocationOfIpReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='country', full_name='GetLocationOfIpReply.country', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='state', full_name='GetLocationOfIpReply.state', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error', full_name='GetLocationOfIpReply.error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_country', full_name='GetLocationOfIpReply._country',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_state', full_name='GetLocationOfIpReply._state',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_error', full_name='GetLocationOfIpReply._error',
      index=2, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=252,
  serialized_end=368,
)

_GETLOCATIONOFIPREPLY.oneofs_by_name['_country'].fields.append(
  _GETLOCATIONOFIPREPLY.fields_by_name['country'])
_GETLOCATIONOFIPREPLY.fields_by_name['country'].containing_oneof = _GETLOCATIONOFIPREPLY.oneofs_by_name['_country']
_GETLOCATIONOFIPREPLY.oneofs_by_name['_state'].fields.append(
  _GETLOCATIONOFIPREPLY.fields_by_name['state'])
_GETLOCATIONOFIPREPLY.fields_by_name['state'].containing_oneof = _GETLOCATIONOFIPREPLY.oneofs_by_name['_state']
_GETLOCATIONOFIPREPLY.oneofs_by_name['_error'].fields.append(
  _GETLOCATIONOFIPREPLY.fields_by_name['error'])
_GETLOCATIONOFIPREPLY.fields_by_name['error'].containing_oneof = _GETLOCATIONOFIPREPLY.oneofs_by_name['_error']
DESCRIPTOR.message_types_by_name['Country'] = _COUNTRY
DESCRIPTOR.message_types_by_name['SubCountry'] = _SUBCOUNTRY
DESCRIPTOR.message_types_by_name['City'] = _CITY
DESCRIPTOR.message_types_by_name['Ip'] = _IP
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['GetAllCountriesReply'] = _GETALLCOUNTRIESREPLY
DESCRIPTOR.message_types_by_name['GetSubCountriesReply'] = _GETSUBCOUNTRIESREPLY
DESCRIPTOR.message_types_by_name['GetCitiesReply'] = _GETCITIESREPLY
DESCRIPTOR.message_types_by_name['GetLocationOfIpReply'] = _GETLOCATIONOFIPREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Country = _reflection.GeneratedProtocolMessageType('Country', (_message.Message,), {
  'DESCRIPTOR' : _COUNTRY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:Country)
  })
_sym_db.RegisterMessage(Country)

SubCountry = _reflection.GeneratedProtocolMessageType('SubCountry', (_message.Message,), {
  'DESCRIPTOR' : _SUBCOUNTRY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:SubCountry)
  })
_sym_db.RegisterMessage(SubCountry)

City = _reflection.GeneratedProtocolMessageType('City', (_message.Message,), {
  'DESCRIPTOR' : _CITY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:City)
  })
_sym_db.RegisterMessage(City)

Ip = _reflection.GeneratedProtocolMessageType('Ip', (_message.Message,), {
  'DESCRIPTOR' : _IP,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:Ip)
  })
_sym_db.RegisterMessage(Ip)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  })
_sym_db.RegisterMessage(Empty)

GetAllCountriesReply = _reflection.GeneratedProtocolMessageType('GetAllCountriesReply', (_message.Message,), {
  'DESCRIPTOR' : _GETALLCOUNTRIESREPLY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:GetAllCountriesReply)
  })
_sym_db.RegisterMessage(GetAllCountriesReply)

GetSubCountriesReply = _reflection.GeneratedProtocolMessageType('GetSubCountriesReply', (_message.Message,), {
  'DESCRIPTOR' : _GETSUBCOUNTRIESREPLY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:GetSubCountriesReply)
  })
_sym_db.RegisterMessage(GetSubCountriesReply)

GetCitiesReply = _reflection.GeneratedProtocolMessageType('GetCitiesReply', (_message.Message,), {
  'DESCRIPTOR' : _GETCITIESREPLY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:GetCitiesReply)
  })
_sym_db.RegisterMessage(GetCitiesReply)

GetLocationOfIpReply = _reflection.GeneratedProtocolMessageType('GetLocationOfIpReply', (_message.Message,), {
  'DESCRIPTOR' : _GETLOCATIONOFIPREPLY,
  '__module__' : 'geoService_pb2'
  # @@protoc_insertion_point(class_scope:GetLocationOfIpReply)
  })
_sym_db.RegisterMessage(GetLocationOfIpReply)



_GEOSERVICE = _descriptor.ServiceDescriptor(
  name='GeoService',
  full_name='GeoService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=371,
  serialized_end=575,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAllCountries',
    full_name='GeoService.GetAllCountries',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_GETALLCOUNTRIESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSubCountries',
    full_name='GeoService.GetSubCountries',
    index=1,
    containing_service=None,
    input_type=_COUNTRY,
    output_type=_GETSUBCOUNTRIESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCities',
    full_name='GeoService.GetCities',
    index=2,
    containing_service=None,
    input_type=_SUBCOUNTRY,
    output_type=_GETCITIESREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetLocationOfIp',
    full_name='GeoService.GetLocationOfIp',
    index=3,
    containing_service=None,
    input_type=_IP,
    output_type=_GETLOCATIONOFIPREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GEOSERVICE)

DESCRIPTOR.services_by_name['GeoService'] = _GEOSERVICE

# @@protoc_insertion_point(module_scope)
